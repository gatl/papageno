# If there is ever a parsing error in this file,
# use an online validation tool such as
#
# http://yaml-online-parser.appspot.com/
#
# to find its orgin.

language: c
  
dist: trusty

before_install:
  - sudo apt-get update -qq
install:
  - sudo apt-get install -qq valgrind
  
script: 
  - mkdir -p build/release
  - cd build/release
  - cmake -DCMAKE_BUILD_TYPE=Debug ../..
  - make
  - ctest -D ExperimentalTest --output-on-failure
  - ctest -D ExperimentalMemCheck --output-on-failure

notifications:
  email:
    recipients:
      - shinynoseglasses@gmail.com
    on_failure: always
    
cache:
  ccache: true
  
#compiler:
  #- clang
  #- gcc

matrix:
  include:
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    # Build using clang-tidy
    #
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
            - clang-tidy-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
      script:
        - mkdir -p build/release
        - cd build/release
        - wget https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz
        - tar xzf cmake-3.8.2-Linux-x86_64.tar.gz
        - ./cmake-3.8.2-Linux-x86_64/bin/cmake -DCMAKE_C_CLANG_TIDY:STRING="/usr/bin/clang-tidy-3.8;-checks=-*,readability-*" ../..
        - make
        
    # Cross-build and test using avr-gcc and simavr
    #
    - os: linux
      addons:
        apt:
          packages:
            - git-all
            - libelf-dev
            - gcc-avr
      script:
        - mkdir -p simavr
        - cd simavr
        - git clone https://github.com/buserror/simavr.git
        - cd simavr
        - sudo make RELEASE=1
        - sudo make install RELEASE=1
        - cd ../..
        - mkdir -p build/release
        - cd build/release
        - cmake -DCMAKE_TOOLCHAIN_FILE=$PWD/../../cmake/toolchains/Toolchain-avr-gcc.cmake -DPAPAGENO_PLATFORM_CMAKE_FILE=$PWD/../../cmake/platforms/platform_atmega1280.cmake ../..
        - make
        - ctest -D ExperimentalTest --output-on-failure
        
    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        
    # Clang with address sanitizer
    #
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
          packages:
            - clang-5.0
      env:
         - CFLAGS="-fsanitize=address -fno-omit-frame-pointer"
         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
                 
      script: 
         - mkdir -p build/release
         - cd build/release
         - cmake -DCMAKE_BUILD_TYPE=Debug ../..
         - make
         - ctest -D ExperimentalTest --output-on-failure
         
    # Clang with memory sanitizer
    #
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
          packages:
            - clang-5.0
      env:
        - CFLAGS="-fsanitize=memory -fno-omit-frame-pointer"
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
                 
      script: 
         - mkdir -p build/release
         - cd build/release
         - cmake -DCMAKE_BUILD_TYPE=Debug ../..
         - make
         - ctest -D ExperimentalTest --output-on-failure
         
    # Clang with undefined behavior sanitizer
    #
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
          packages:
            - clang-5.0
      env:
         - CFLAGS="-fsanitize=undefined -fno-omit-frame-pointer"
         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        
      script: 
         - mkdir -p build/release
         - cd build/release
         - cmake -DCMAKE_BUILD_TYPE=Debug ../..
         - make
         - ctest -D ExperimentalTest --output-on-failure
        
    # works on Trusty
    - os: linux
      addons:
        apt:
          packages:
            - gcc-avr 
            - binutils-avr 
            - avr-libc
      script: 
        - mkdir -p build/release
        - cd build/release
        - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../../cmake/toolchains/Toolchain-avr-gcc.cmake -DPAPAGENO_TESTING=FALSE ../..
        - make
         
    # Build the doxygen API documentation and push it to gh-pages branch
    # Generate coverage information in the same run
    #
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - doxygen
            - doxygen-doc
            - doxygen-latex
            - doxygen-gui
            - graphviz
            - lcov
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      script: 
        - mkdir -p build/debug
        - cd build/debug
        - cmake -DCMAKE_BUILD_TYPE=Debug -DPAPAGENO_TEST_COVERAGE=TRUE -DPAPAGENO_DOXYGEN=TRUE ../..
        - make doxygen coverage
      deploy:
        provider: pages
        skip_cleanup: true
        local_dir: $TRAVIS_BUILD_DIR/build/debug/html
        github_token: $GITHUB_API_KEY
        on:
          branch: master
         
    # Check for broken links on the Papageno github page
    #
    #- os: linux
      #addons:
        #apt:
          #packages:
            #- linkchecker
      #script:
        #- linkchecker https://github.com/noseglasses/papageno

before_install:
    - eval "${MATRIX_EVAL}"